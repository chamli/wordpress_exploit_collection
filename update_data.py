#!/usr/bin/python
# -*- coding: utf-8 -*-
import requests
import os
import time
import hashlib
import json

def database_update():
  print("\033[93mUpdating database\033[92m - Last update: \033[0m" + database_last_date('database/local_vulnerable_files.xml'))
  update_url = "https://data.wpscan.org/"
  update_files = [  'wp_versions.xml', 'wp_versions.xsd',
  'wordpresses.json', 'plugins.json', 'themes.json']

  for f in update_files:
    print("\t\033[93mDownloading \033[0m"+ f +" \033[92mFile updated !\033[0m")
    download_raw_file(update_url+f, "database/"+f, True)


def database_last_date(filename):
  if not os.path.isfile(filename):
    return "Never"
  (mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime) = os.stat(filename)
  return time.ctime(mtime)


def download_raw_file(url, filename, verbosity):
  try:

    # Open the request
    source = requests.get( url, stream=True).raw

    # Write the file
    with open( filename, 'wb+' ) as ddl_file:
      progress = 0
      while True:
          length = 16*1024
          buf = source.read(length)
          if not buf:
              break
          ddl_file.write(buf)
          progress += len(buf)

          if verbosity == True:
            print('\tDownloaded : %.2f Mo\r' % (float(progress)/(1024*1024))),

  except Exception as e:
    raise e